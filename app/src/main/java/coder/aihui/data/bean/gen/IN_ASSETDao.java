package coder.aihui.data.bean.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import coder.aihui.data.bean.IN_ASSET;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "IN__ASSET".
*/
public class IN_ASSETDao extends AbstractDao<IN_ASSET, Long> {

    public static final String TABLENAME = "IN__ASSET";

    /**
     * Properties of entity IN_ASSET.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property ID = new Property(0, Long.class, "ID", true, "ID");
        public final static Property ZZID = new Property(1, String.class, "ZZID", false, "ZZID");
        public final static Property KFID = new Property(2, String.class, "KFID", false, "KFID");
        public final static Property FLID = new Property(3, String.class, "FLID", false, "FLID");
        public final static Property ZBID = new Property(4, String.class, "ZBID", false, "ZBID");
        public final static Property ZBMC = new Property(5, String.class, "ZBMC", false, "ZBMC");
        public final static Property HSID = new Property(6, String.class, "HSID", false, "HSID");
        public final static Property HSMC = new Property(7, String.class, "HSMC", false, "HSMC");
        public final static Property KPBH = new Property(8, String.class, "KPBH", false, "KPBH");
        public final static Property KPBH_OLD = new Property(9, String.class, "KPBH_OLD", false, "KPBH__OLD");
        public final static Property UHF = new Property(10, String.class, "UHF", false, "UHF");
        public final static Property UHF1 = new Property(11, String.class, "UHF1", false, "UHF1");
        public final static Property UHF2 = new Property(12, String.class, "UHF2", false, "UHF2");
        public final static Property UFH3 = new Property(13, String.class, "UFH3", false, "UFH3");
        public final static Property MCGGID = new Property(14, String.class, "MCGGID", false, "MCGGID");
        public final static Property WZMC = new Property(15, String.class, "WZMC", false, "WZMC");
        public final static Property GGXH = new Property(16, String.class, "GGXH", false, "GGXH");
        public final static Property ZXDW = new Property(17, String.class, "ZXDW", false, "ZXDW");
        public final static Property KCID = new Property(18, String.class, "KCID", false, "KCID");
        public final static Property KSID = new Property(19, String.class, "KSID", false, "KSID");
        public final static Property KSMC = new Property(20, String.class, "KSMC", false, "KSMC");
        public final static Property BGKSID = new Property(21, String.class, "BGKSID", false, "BGKSID");
        public final static Property BGKSMC = new Property(22, String.class, "BGKSMC", false, "BGKSMC");
        public final static Property BGRID = new Property(23, String.class, "BGRID", false, "BGRID");
        public final static Property BGRXM = new Property(24, String.class, "BGRXM", false, "BGRXM");
        public final static Property JBRID = new Property(25, String.class, "JBRID", false, "JBRID");
        public final static Property JBRXM = new Property(26, String.class, "JBRXM", false, "JBRXM");
        public final static Property CDID = new Property(27, String.class, "CDID", false, "CDID");
        public final static Property CDMC = new Property(28, String.class, "CDMC", false, "CDMC");
        public final static Property PPID = new Property(29, String.class, "PPID", false, "PPID");
        public final static Property PPMC = new Property(30, String.class, "PPMC", false, "PPMC");
        public final static Property GHDWID = new Property(31, String.class, "GHDWID", false, "GHDWID");
        public final static Property GHDWMC = new Property(32, String.class, "GHDWMC", false, "GHDWMC");
        public final static Property SCCJID = new Property(33, String.class, "SCCJID", false, "SCCJID");
        public final static Property SCCJMC = new Property(34, String.class, "SCCJMC", false, "SCCJMC");
        public final static Property GRTJ = new Property(35, String.class, "GRTJ", false, "GRTJ");
        public final static Property GRRQ = new Property(36, java.util.Date.class, "GRRQ", false, "GRRQ");
        public final static Property ZT = new Property(37, String.class, "ZT", false, "ZT");
        public final static Property SYRQ = new Property(38, java.util.Date.class, "SYRQ", false, "SYRQ");
        public final static Property JZRQ = new Property(39, java.util.Date.class, "JZRQ", false, "JZRQ");
        public final static Property DHAZRQ = new Property(40, java.util.Date.class, "DHAZRQ", false, "DHAZRQ");
        public final static Property DDXX = new Property(41, String.class, "DDXX", false, "DDXX");
        public final static Property DDID = new Property(42, String.class, "DDID", false, "DDID");
        public final static Property DDMC = new Property(43, String.class, "DDMC", false, "DDMC");
        public final static Property DDJC = new Property(44, String.class, "DDJC", false, "DDJC");
        public final static Property ZJYS = new Property(45, Double.class, "ZJYS", false, "ZJYS");
        public final static Property LJZJYS = new Property(46, Double.class, "LJZJYS", false, "LJZJYS");
        public final static Property SYYS = new Property(47, Double.class, "SYYS", false, "SYYS");
        public final static Property DJ = new Property(48, Double.class, "DJ", false, "DJ");
        public final static Property CZ_JE = new Property(49, Double.class, "CZ_JE", false, "CZ__JE");
        public final static Property ZC_JE = new Property(50, Double.class, "ZC_JE", false, "ZC__JE");
        public final static Property KY_JE = new Property(51, Double.class, "KY_JE", false, "KY__JE");
        public final static Property CZ_LJZJJE = new Property(52, Double.class, "CZ_LJZJJE", false, "CZ__LJZJJE");
        public final static Property ZC_LJZJJE = new Property(53, Double.class, "ZC_LJZJJE", false, "ZC__LJZJJE");
        public final static Property KY_LJZJJE = new Property(54, Double.class, "KY_LJZJJE", false, "KY__LJZJJE");
        public final static Property LJZJJE = new Property(55, Double.class, "LJZJJE", false, "LJZJJE");
        public final static Property JCZ = new Property(56, Double.class, "JCZ", false, "JCZ");
        public final static Property KJQJ = new Property(57, String.class, "KJQJ", false, "KJQJ");
        public final static Property RKDMXID = new Property(58, String.class, "RKDMXID", false, "RKDMXID");
        public final static Property RKD_DJHM = new Property(59, String.class, "RKD_DJHM", false, "RKD__DJHM");
        public final static Property RKRQ = new Property(60, java.util.Date.class, "RKRQ", false, "RKRQ");
        public final static Property RKDMXID2 = new Property(61, String.class, "RKDMXID2", false, "RKDMXID2");
        public final static Property RKD_DJHM2 = new Property(62, String.class, "RKD_DJHM2", false, "RKD__DJHM2");
        public final static Property RKRQ2 = new Property(63, java.util.Date.class, "RKRQ2", false, "RKRQ2");
        public final static Property CKDMXID = new Property(64, String.class, "CKDMXID", false, "CKDMXID");
        public final static Property CKD_DJHM = new Property(65, String.class, "CKD_DJHM", false, "CKD__DJHM");
        public final static Property CKRQ = new Property(66, java.util.Date.class, "CKRQ", false, "CKRQ");
        public final static Property CKDMXID2 = new Property(67, String.class, "CKDMXID2", false, "CKDMXID2");
        public final static Property CKD_DJHM2 = new Property(68, String.class, "CKD_DJHM2", false, "CKD__DJHM2");
        public final static Property CKRQ2 = new Property(69, java.util.Date.class, "CKRQ2", false, "CKRQ2");
        public final static Property DBSRQ = new Property(70, java.util.Date.class, "DBSRQ", false, "DBSRQ");
        public final static Property BSDMXID = new Property(71, String.class, "BSDMXID", false, "BSDMXID");
        public final static Property BSD_DJHM = new Property(72, String.class, "BSD_DJHM", false, "BSD__DJHM");
        public final static Property BSRQ = new Property(73, java.util.Date.class, "BSRQ", false, "BSRQ");
        public final static Property JFLBID = new Property(74, String.class, "JFLBID", false, "JFLBID");
        public final static Property JFLBMC = new Property(75, String.class, "JFLBMC", false, "JFLBMC");
        public final static Property JFID = new Property(76, String.class, "JFID", false, "JFID");
        public final static Property JFMC = new Property(77, String.class, "JFMC", false, "JFMC");
        public final static Property SCBH = new Property(78, String.class, "SCBH", false, "SCBH");
        public final static Property PM_PLAN_FLAG = new Property(79, Integer.class, "PM_PLAN_FLAG", false, "PM__PLAN__FLAG");
        public final static Property PM_FLAG = new Property(80, Integer.class, "PM_FLAG", false, "PM__FLAG");
        public final static Property WXBZ = new Property(81, Integer.class, "WXBZ", false, "WXBZ");
        public final static Property TD_TDMJ = new Property(82, Double.class, "TD_TDMJ", false, "TD__TDMJ");
        public final static Property TD_ZH = new Property(83, String.class, "TD_ZH", false, "TD__ZH");
        public final static Property TD_FZRQ = new Property(84, java.util.Date.class, "TD_FZRQ", false, "TD__FZRQ");
        public final static Property TD_LY = new Property(85, String.class, "TD_LY", false, "TD__LY");
        public final static Property TD_CQXS = new Property(86, String.class, "TD_CQXS", false, "TD__CQXS");
        public final static Property TD_SYFX = new Property(87, String.class, "TD_SYFX", false, "TD__SYFX");
        public final static Property QC_CPH = new Property(88, String.class, "QC_CPH", false, "QC__CPH");
        public final static Property QC_FZRQ = new Property(89, java.util.Date.class, "QC_FZRQ", false, "QC__FZRQ");
        public final static Property QC_ZH = new Property(90, String.class, "QC_ZH", false, "QC__ZH");
        public final static Property QC_XH = new Property(91, String.class, "QC_XH", false, "QC__XH");
        public final static Property QC_PQL = new Property(92, Double.class, "QC_PQL", false, "QC__PQL");
        public final static Property FW_JZJG = new Property(93, String.class, "FW_JZJG", false, "FW__JZJG");
        public final static Property FW_JZMJ = new Property(94, Double.class, "FW_JZMJ", false, "FW__JZMJ");
        public final static Property FW_JGRQ = new Property(95, java.util.Date.class, "FW_JGRQ", false, "FW__JGRQ");
        public final static Property FW_SYRQ = new Property(96, java.util.Date.class, "FW_SYRQ", false, "FW__SYRQ");
        public final static Property LRRID = new Property(97, String.class, "LRRID", false, "LRRID");
        public final static Property LRRXM = new Property(98, String.class, "LRRXM", false, "LRRXM");
        public final static Property LRRQ = new Property(99, java.util.Date.class, "LRRQ", false, "LRRQ");
        public final static Property SHRID = new Property(100, String.class, "SHRID", false, "SHRID");
        public final static Property SHRXM = new Property(101, String.class, "SHRXM", false, "SHRXM");
        public final static Property SHRQ = new Property(102, java.util.Date.class, "SHRQ", false, "SHRQ");
        public final static Property SHBZ = new Property(103, Integer.class, "SHBZ", false, "SHBZ");
        public final static Property BZ = new Property(104, String.class, "BZ", false, "BZ");
        public final static Property TZXZ = new Property(105, Integer.class, "TZXZ", false, "TZXZ");
        public final static Property ZFBZ = new Property(106, Integer.class, "ZFBZ", false, "ZFBZ");
        public final static Property ZFSJ = new Property(107, java.util.Date.class, "ZFSJ", false, "ZFSJ");
        public final static Property ZFRID = new Property(108, String.class, "ZFRID", false, "ZFRID");
        public final static Property ZFRXM = new Property(109, String.class, "ZFRXM", false, "ZFRXM");
        public final static Property BXRQ = new Property(110, java.util.Date.class, "BXRQ", false, "BXRQ");
        public final static Property CCXLH = new Property(111, String.class, "CCXLH", false, "CCXLH");
        public final static Property SCRQ = new Property(112, java.util.Date.class, "SCRQ", false, "SCRQ");
        public final static Property JLBZ = new Property(113, String.class, "JLBZ", false, "JLBZ");
        public final static Property RFID_CODE = new Property(114, String.class, "RFID_CODE", false, "RFID__CODE");
        public final static Property PRINT_COUNT = new Property(115, Integer.class, "PRINT_COUNT", false, "PRINT__COUNT");
        public final static Property FACTORY_PHONE = new Property(116, String.class, "FACTORY_PHONE", false, "FACTORY__PHONE");
        public final static Property KSKCID = new Property(117, String.class, "KSKCID", false, "KSKCID");
        public final static Property BAR_CODE = new Property(118, String.class, "BAR_CODE", false, "BAR__CODE");
        public final static Property XJBZ = new Property(119, Integer.class, "XJBZ", false, "XJBZ");
        public final static Property QJBZ = new Property(120, Integer.class, "QJBZ", false, "QJBZ");
    }


    public IN_ASSETDao(DaoConfig config) {
        super(config);
    }
    
    public IN_ASSETDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"IN__ASSET\" (" + //
                "\"ID\" INTEGER PRIMARY KEY ," + // 0: ID
                "\"ZZID\" TEXT," + // 1: ZZID
                "\"KFID\" TEXT," + // 2: KFID
                "\"FLID\" TEXT," + // 3: FLID
                "\"ZBID\" TEXT," + // 4: ZBID
                "\"ZBMC\" TEXT," + // 5: ZBMC
                "\"HSID\" TEXT," + // 6: HSID
                "\"HSMC\" TEXT," + // 7: HSMC
                "\"KPBH\" TEXT," + // 8: KPBH
                "\"KPBH__OLD\" TEXT," + // 9: KPBH_OLD
                "\"UHF\" TEXT," + // 10: UHF
                "\"UHF1\" TEXT," + // 11: UHF1
                "\"UHF2\" TEXT," + // 12: UHF2
                "\"UFH3\" TEXT," + // 13: UFH3
                "\"MCGGID\" TEXT," + // 14: MCGGID
                "\"WZMC\" TEXT," + // 15: WZMC
                "\"GGXH\" TEXT," + // 16: GGXH
                "\"ZXDW\" TEXT," + // 17: ZXDW
                "\"KCID\" TEXT," + // 18: KCID
                "\"KSID\" TEXT," + // 19: KSID
                "\"KSMC\" TEXT," + // 20: KSMC
                "\"BGKSID\" TEXT," + // 21: BGKSID
                "\"BGKSMC\" TEXT," + // 22: BGKSMC
                "\"BGRID\" TEXT," + // 23: BGRID
                "\"BGRXM\" TEXT," + // 24: BGRXM
                "\"JBRID\" TEXT," + // 25: JBRID
                "\"JBRXM\" TEXT," + // 26: JBRXM
                "\"CDID\" TEXT," + // 27: CDID
                "\"CDMC\" TEXT," + // 28: CDMC
                "\"PPID\" TEXT," + // 29: PPID
                "\"PPMC\" TEXT," + // 30: PPMC
                "\"GHDWID\" TEXT," + // 31: GHDWID
                "\"GHDWMC\" TEXT," + // 32: GHDWMC
                "\"SCCJID\" TEXT," + // 33: SCCJID
                "\"SCCJMC\" TEXT," + // 34: SCCJMC
                "\"GRTJ\" TEXT," + // 35: GRTJ
                "\"GRRQ\" INTEGER," + // 36: GRRQ
                "\"ZT\" TEXT," + // 37: ZT
                "\"SYRQ\" INTEGER," + // 38: SYRQ
                "\"JZRQ\" INTEGER," + // 39: JZRQ
                "\"DHAZRQ\" INTEGER," + // 40: DHAZRQ
                "\"DDXX\" TEXT," + // 41: DDXX
                "\"DDID\" TEXT," + // 42: DDID
                "\"DDMC\" TEXT," + // 43: DDMC
                "\"DDJC\" TEXT," + // 44: DDJC
                "\"ZJYS\" REAL," + // 45: ZJYS
                "\"LJZJYS\" REAL," + // 46: LJZJYS
                "\"SYYS\" REAL," + // 47: SYYS
                "\"DJ\" REAL," + // 48: DJ
                "\"CZ__JE\" REAL," + // 49: CZ_JE
                "\"ZC__JE\" REAL," + // 50: ZC_JE
                "\"KY__JE\" REAL," + // 51: KY_JE
                "\"CZ__LJZJJE\" REAL," + // 52: CZ_LJZJJE
                "\"ZC__LJZJJE\" REAL," + // 53: ZC_LJZJJE
                "\"KY__LJZJJE\" REAL," + // 54: KY_LJZJJE
                "\"LJZJJE\" REAL," + // 55: LJZJJE
                "\"JCZ\" REAL," + // 56: JCZ
                "\"KJQJ\" TEXT," + // 57: KJQJ
                "\"RKDMXID\" TEXT," + // 58: RKDMXID
                "\"RKD__DJHM\" TEXT," + // 59: RKD_DJHM
                "\"RKRQ\" INTEGER," + // 60: RKRQ
                "\"RKDMXID2\" TEXT," + // 61: RKDMXID2
                "\"RKD__DJHM2\" TEXT," + // 62: RKD_DJHM2
                "\"RKRQ2\" INTEGER," + // 63: RKRQ2
                "\"CKDMXID\" TEXT," + // 64: CKDMXID
                "\"CKD__DJHM\" TEXT," + // 65: CKD_DJHM
                "\"CKRQ\" INTEGER," + // 66: CKRQ
                "\"CKDMXID2\" TEXT," + // 67: CKDMXID2
                "\"CKD__DJHM2\" TEXT," + // 68: CKD_DJHM2
                "\"CKRQ2\" INTEGER," + // 69: CKRQ2
                "\"DBSRQ\" INTEGER," + // 70: DBSRQ
                "\"BSDMXID\" TEXT," + // 71: BSDMXID
                "\"BSD__DJHM\" TEXT," + // 72: BSD_DJHM
                "\"BSRQ\" INTEGER," + // 73: BSRQ
                "\"JFLBID\" TEXT," + // 74: JFLBID
                "\"JFLBMC\" TEXT," + // 75: JFLBMC
                "\"JFID\" TEXT," + // 76: JFID
                "\"JFMC\" TEXT," + // 77: JFMC
                "\"SCBH\" TEXT," + // 78: SCBH
                "\"PM__PLAN__FLAG\" INTEGER," + // 79: PM_PLAN_FLAG
                "\"PM__FLAG\" INTEGER," + // 80: PM_FLAG
                "\"WXBZ\" INTEGER," + // 81: WXBZ
                "\"TD__TDMJ\" REAL," + // 82: TD_TDMJ
                "\"TD__ZH\" TEXT," + // 83: TD_ZH
                "\"TD__FZRQ\" INTEGER," + // 84: TD_FZRQ
                "\"TD__LY\" TEXT," + // 85: TD_LY
                "\"TD__CQXS\" TEXT," + // 86: TD_CQXS
                "\"TD__SYFX\" TEXT," + // 87: TD_SYFX
                "\"QC__CPH\" TEXT," + // 88: QC_CPH
                "\"QC__FZRQ\" INTEGER," + // 89: QC_FZRQ
                "\"QC__ZH\" TEXT," + // 90: QC_ZH
                "\"QC__XH\" TEXT," + // 91: QC_XH
                "\"QC__PQL\" REAL," + // 92: QC_PQL
                "\"FW__JZJG\" TEXT," + // 93: FW_JZJG
                "\"FW__JZMJ\" REAL," + // 94: FW_JZMJ
                "\"FW__JGRQ\" INTEGER," + // 95: FW_JGRQ
                "\"FW__SYRQ\" INTEGER," + // 96: FW_SYRQ
                "\"LRRID\" TEXT," + // 97: LRRID
                "\"LRRXM\" TEXT," + // 98: LRRXM
                "\"LRRQ\" INTEGER," + // 99: LRRQ
                "\"SHRID\" TEXT," + // 100: SHRID
                "\"SHRXM\" TEXT," + // 101: SHRXM
                "\"SHRQ\" INTEGER," + // 102: SHRQ
                "\"SHBZ\" INTEGER," + // 103: SHBZ
                "\"BZ\" TEXT," + // 104: BZ
                "\"TZXZ\" INTEGER," + // 105: TZXZ
                "\"ZFBZ\" INTEGER," + // 106: ZFBZ
                "\"ZFSJ\" INTEGER," + // 107: ZFSJ
                "\"ZFRID\" TEXT," + // 108: ZFRID
                "\"ZFRXM\" TEXT," + // 109: ZFRXM
                "\"BXRQ\" INTEGER," + // 110: BXRQ
                "\"CCXLH\" TEXT," + // 111: CCXLH
                "\"SCRQ\" INTEGER," + // 112: SCRQ
                "\"JLBZ\" TEXT," + // 113: JLBZ
                "\"RFID__CODE\" TEXT," + // 114: RFID_CODE
                "\"PRINT__COUNT\" INTEGER," + // 115: PRINT_COUNT
                "\"FACTORY__PHONE\" TEXT," + // 116: FACTORY_PHONE
                "\"KSKCID\" TEXT," + // 117: KSKCID
                "\"BAR__CODE\" TEXT," + // 118: BAR_CODE
                "\"XJBZ\" INTEGER," + // 119: XJBZ
                "\"QJBZ\" INTEGER);"); // 120: QJBZ
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"IN__ASSET\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, IN_ASSET entity) {
        stmt.clearBindings();
 
        Long ID = entity.getID();
        if (ID != null) {
            stmt.bindLong(1, ID);
        }
 
        String ZZID = entity.getZZID();
        if (ZZID != null) {
            stmt.bindString(2, ZZID);
        }
 
        String KFID = entity.getKFID();
        if (KFID != null) {
            stmt.bindString(3, KFID);
        }
 
        String FLID = entity.getFLID();
        if (FLID != null) {
            stmt.bindString(4, FLID);
        }
 
        String ZBID = entity.getZBID();
        if (ZBID != null) {
            stmt.bindString(5, ZBID);
        }
 
        String ZBMC = entity.getZBMC();
        if (ZBMC != null) {
            stmt.bindString(6, ZBMC);
        }
 
        String HSID = entity.getHSID();
        if (HSID != null) {
            stmt.bindString(7, HSID);
        }
 
        String HSMC = entity.getHSMC();
        if (HSMC != null) {
            stmt.bindString(8, HSMC);
        }
 
        String KPBH = entity.getKPBH();
        if (KPBH != null) {
            stmt.bindString(9, KPBH);
        }
 
        String KPBH_OLD = entity.getKPBH_OLD();
        if (KPBH_OLD != null) {
            stmt.bindString(10, KPBH_OLD);
        }
 
        String UHF = entity.getUHF();
        if (UHF != null) {
            stmt.bindString(11, UHF);
        }
 
        String UHF1 = entity.getUHF1();
        if (UHF1 != null) {
            stmt.bindString(12, UHF1);
        }
 
        String UHF2 = entity.getUHF2();
        if (UHF2 != null) {
            stmt.bindString(13, UHF2);
        }
 
        String UFH3 = entity.getUFH3();
        if (UFH3 != null) {
            stmt.bindString(14, UFH3);
        }
 
        String MCGGID = entity.getMCGGID();
        if (MCGGID != null) {
            stmt.bindString(15, MCGGID);
        }
 
        String WZMC = entity.getWZMC();
        if (WZMC != null) {
            stmt.bindString(16, WZMC);
        }
 
        String GGXH = entity.getGGXH();
        if (GGXH != null) {
            stmt.bindString(17, GGXH);
        }
 
        String ZXDW = entity.getZXDW();
        if (ZXDW != null) {
            stmt.bindString(18, ZXDW);
        }
 
        String KCID = entity.getKCID();
        if (KCID != null) {
            stmt.bindString(19, KCID);
        }
 
        String KSID = entity.getKSID();
        if (KSID != null) {
            stmt.bindString(20, KSID);
        }
 
        String KSMC = entity.getKSMC();
        if (KSMC != null) {
            stmt.bindString(21, KSMC);
        }
 
        String BGKSID = entity.getBGKSID();
        if (BGKSID != null) {
            stmt.bindString(22, BGKSID);
        }
 
        String BGKSMC = entity.getBGKSMC();
        if (BGKSMC != null) {
            stmt.bindString(23, BGKSMC);
        }
 
        String BGRID = entity.getBGRID();
        if (BGRID != null) {
            stmt.bindString(24, BGRID);
        }
 
        String BGRXM = entity.getBGRXM();
        if (BGRXM != null) {
            stmt.bindString(25, BGRXM);
        }
 
        String JBRID = entity.getJBRID();
        if (JBRID != null) {
            stmt.bindString(26, JBRID);
        }
 
        String JBRXM = entity.getJBRXM();
        if (JBRXM != null) {
            stmt.bindString(27, JBRXM);
        }
 
        String CDID = entity.getCDID();
        if (CDID != null) {
            stmt.bindString(28, CDID);
        }
 
        String CDMC = entity.getCDMC();
        if (CDMC != null) {
            stmt.bindString(29, CDMC);
        }
 
        String PPID = entity.getPPID();
        if (PPID != null) {
            stmt.bindString(30, PPID);
        }
 
        String PPMC = entity.getPPMC();
        if (PPMC != null) {
            stmt.bindString(31, PPMC);
        }
 
        String GHDWID = entity.getGHDWID();
        if (GHDWID != null) {
            stmt.bindString(32, GHDWID);
        }
 
        String GHDWMC = entity.getGHDWMC();
        if (GHDWMC != null) {
            stmt.bindString(33, GHDWMC);
        }
 
        String SCCJID = entity.getSCCJID();
        if (SCCJID != null) {
            stmt.bindString(34, SCCJID);
        }
 
        String SCCJMC = entity.getSCCJMC();
        if (SCCJMC != null) {
            stmt.bindString(35, SCCJMC);
        }
 
        String GRTJ = entity.getGRTJ();
        if (GRTJ != null) {
            stmt.bindString(36, GRTJ);
        }
 
        java.util.Date GRRQ = entity.getGRRQ();
        if (GRRQ != null) {
            stmt.bindLong(37, GRRQ.getTime());
        }
 
        String ZT = entity.getZT();
        if (ZT != null) {
            stmt.bindString(38, ZT);
        }
 
        java.util.Date SYRQ = entity.getSYRQ();
        if (SYRQ != null) {
            stmt.bindLong(39, SYRQ.getTime());
        }
 
        java.util.Date JZRQ = entity.getJZRQ();
        if (JZRQ != null) {
            stmt.bindLong(40, JZRQ.getTime());
        }
 
        java.util.Date DHAZRQ = entity.getDHAZRQ();
        if (DHAZRQ != null) {
            stmt.bindLong(41, DHAZRQ.getTime());
        }
 
        String DDXX = entity.getDDXX();
        if (DDXX != null) {
            stmt.bindString(42, DDXX);
        }
 
        String DDID = entity.getDDID();
        if (DDID != null) {
            stmt.bindString(43, DDID);
        }
 
        String DDMC = entity.getDDMC();
        if (DDMC != null) {
            stmt.bindString(44, DDMC);
        }
 
        String DDJC = entity.getDDJC();
        if (DDJC != null) {
            stmt.bindString(45, DDJC);
        }
 
        Double ZJYS = entity.getZJYS();
        if (ZJYS != null) {
            stmt.bindDouble(46, ZJYS);
        }
 
        Double LJZJYS = entity.getLJZJYS();
        if (LJZJYS != null) {
            stmt.bindDouble(47, LJZJYS);
        }
 
        Double SYYS = entity.getSYYS();
        if (SYYS != null) {
            stmt.bindDouble(48, SYYS);
        }
 
        Double DJ = entity.getDJ();
        if (DJ != null) {
            stmt.bindDouble(49, DJ);
        }
 
        Double CZ_JE = entity.getCZ_JE();
        if (CZ_JE != null) {
            stmt.bindDouble(50, CZ_JE);
        }
 
        Double ZC_JE = entity.getZC_JE();
        if (ZC_JE != null) {
            stmt.bindDouble(51, ZC_JE);
        }
 
        Double KY_JE = entity.getKY_JE();
        if (KY_JE != null) {
            stmt.bindDouble(52, KY_JE);
        }
 
        Double CZ_LJZJJE = entity.getCZ_LJZJJE();
        if (CZ_LJZJJE != null) {
            stmt.bindDouble(53, CZ_LJZJJE);
        }
 
        Double ZC_LJZJJE = entity.getZC_LJZJJE();
        if (ZC_LJZJJE != null) {
            stmt.bindDouble(54, ZC_LJZJJE);
        }
 
        Double KY_LJZJJE = entity.getKY_LJZJJE();
        if (KY_LJZJJE != null) {
            stmt.bindDouble(55, KY_LJZJJE);
        }
 
        Double LJZJJE = entity.getLJZJJE();
        if (LJZJJE != null) {
            stmt.bindDouble(56, LJZJJE);
        }
 
        Double JCZ = entity.getJCZ();
        if (JCZ != null) {
            stmt.bindDouble(57, JCZ);
        }
 
        String KJQJ = entity.getKJQJ();
        if (KJQJ != null) {
            stmt.bindString(58, KJQJ);
        }
 
        String RKDMXID = entity.getRKDMXID();
        if (RKDMXID != null) {
            stmt.bindString(59, RKDMXID);
        }
 
        String RKD_DJHM = entity.getRKD_DJHM();
        if (RKD_DJHM != null) {
            stmt.bindString(60, RKD_DJHM);
        }
 
        java.util.Date RKRQ = entity.getRKRQ();
        if (RKRQ != null) {
            stmt.bindLong(61, RKRQ.getTime());
        }
 
        String RKDMXID2 = entity.getRKDMXID2();
        if (RKDMXID2 != null) {
            stmt.bindString(62, RKDMXID2);
        }
 
        String RKD_DJHM2 = entity.getRKD_DJHM2();
        if (RKD_DJHM2 != null) {
            stmt.bindString(63, RKD_DJHM2);
        }
 
        java.util.Date RKRQ2 = entity.getRKRQ2();
        if (RKRQ2 != null) {
            stmt.bindLong(64, RKRQ2.getTime());
        }
 
        String CKDMXID = entity.getCKDMXID();
        if (CKDMXID != null) {
            stmt.bindString(65, CKDMXID);
        }
 
        String CKD_DJHM = entity.getCKD_DJHM();
        if (CKD_DJHM != null) {
            stmt.bindString(66, CKD_DJHM);
        }
 
        java.util.Date CKRQ = entity.getCKRQ();
        if (CKRQ != null) {
            stmt.bindLong(67, CKRQ.getTime());
        }
 
        String CKDMXID2 = entity.getCKDMXID2();
        if (CKDMXID2 != null) {
            stmt.bindString(68, CKDMXID2);
        }
 
        String CKD_DJHM2 = entity.getCKD_DJHM2();
        if (CKD_DJHM2 != null) {
            stmt.bindString(69, CKD_DJHM2);
        }
 
        java.util.Date CKRQ2 = entity.getCKRQ2();
        if (CKRQ2 != null) {
            stmt.bindLong(70, CKRQ2.getTime());
        }
 
        java.util.Date DBSRQ = entity.getDBSRQ();
        if (DBSRQ != null) {
            stmt.bindLong(71, DBSRQ.getTime());
        }
 
        String BSDMXID = entity.getBSDMXID();
        if (BSDMXID != null) {
            stmt.bindString(72, BSDMXID);
        }
 
        String BSD_DJHM = entity.getBSD_DJHM();
        if (BSD_DJHM != null) {
            stmt.bindString(73, BSD_DJHM);
        }
 
        java.util.Date BSRQ = entity.getBSRQ();
        if (BSRQ != null) {
            stmt.bindLong(74, BSRQ.getTime());
        }
 
        String JFLBID = entity.getJFLBID();
        if (JFLBID != null) {
            stmt.bindString(75, JFLBID);
        }
 
        String JFLBMC = entity.getJFLBMC();
        if (JFLBMC != null) {
            stmt.bindString(76, JFLBMC);
        }
 
        String JFID = entity.getJFID();
        if (JFID != null) {
            stmt.bindString(77, JFID);
        }
 
        String JFMC = entity.getJFMC();
        if (JFMC != null) {
            stmt.bindString(78, JFMC);
        }
 
        String SCBH = entity.getSCBH();
        if (SCBH != null) {
            stmt.bindString(79, SCBH);
        }
 
        Integer PM_PLAN_FLAG = entity.getPM_PLAN_FLAG();
        if (PM_PLAN_FLAG != null) {
            stmt.bindLong(80, PM_PLAN_FLAG);
        }
 
        Integer PM_FLAG = entity.getPM_FLAG();
        if (PM_FLAG != null) {
            stmt.bindLong(81, PM_FLAG);
        }
 
        Integer WXBZ = entity.getWXBZ();
        if (WXBZ != null) {
            stmt.bindLong(82, WXBZ);
        }
 
        Double TD_TDMJ = entity.getTD_TDMJ();
        if (TD_TDMJ != null) {
            stmt.bindDouble(83, TD_TDMJ);
        }
 
        String TD_ZH = entity.getTD_ZH();
        if (TD_ZH != null) {
            stmt.bindString(84, TD_ZH);
        }
 
        java.util.Date TD_FZRQ = entity.getTD_FZRQ();
        if (TD_FZRQ != null) {
            stmt.bindLong(85, TD_FZRQ.getTime());
        }
 
        String TD_LY = entity.getTD_LY();
        if (TD_LY != null) {
            stmt.bindString(86, TD_LY);
        }
 
        String TD_CQXS = entity.getTD_CQXS();
        if (TD_CQXS != null) {
            stmt.bindString(87, TD_CQXS);
        }
 
        String TD_SYFX = entity.getTD_SYFX();
        if (TD_SYFX != null) {
            stmt.bindString(88, TD_SYFX);
        }
 
        String QC_CPH = entity.getQC_CPH();
        if (QC_CPH != null) {
            stmt.bindString(89, QC_CPH);
        }
 
        java.util.Date QC_FZRQ = entity.getQC_FZRQ();
        if (QC_FZRQ != null) {
            stmt.bindLong(90, QC_FZRQ.getTime());
        }
 
        String QC_ZH = entity.getQC_ZH();
        if (QC_ZH != null) {
            stmt.bindString(91, QC_ZH);
        }
 
        String QC_XH = entity.getQC_XH();
        if (QC_XH != null) {
            stmt.bindString(92, QC_XH);
        }
 
        Double QC_PQL = entity.getQC_PQL();
        if (QC_PQL != null) {
            stmt.bindDouble(93, QC_PQL);
        }
 
        String FW_JZJG = entity.getFW_JZJG();
        if (FW_JZJG != null) {
            stmt.bindString(94, FW_JZJG);
        }
 
        Double FW_JZMJ = entity.getFW_JZMJ();
        if (FW_JZMJ != null) {
            stmt.bindDouble(95, FW_JZMJ);
        }
 
        java.util.Date FW_JGRQ = entity.getFW_JGRQ();
        if (FW_JGRQ != null) {
            stmt.bindLong(96, FW_JGRQ.getTime());
        }
 
        java.util.Date FW_SYRQ = entity.getFW_SYRQ();
        if (FW_SYRQ != null) {
            stmt.bindLong(97, FW_SYRQ.getTime());
        }
 
        String LRRID = entity.getLRRID();
        if (LRRID != null) {
            stmt.bindString(98, LRRID);
        }
 
        String LRRXM = entity.getLRRXM();
        if (LRRXM != null) {
            stmt.bindString(99, LRRXM);
        }
 
        java.util.Date LRRQ = entity.getLRRQ();
        if (LRRQ != null) {
            stmt.bindLong(100, LRRQ.getTime());
        }
 
        String SHRID = entity.getSHRID();
        if (SHRID != null) {
            stmt.bindString(101, SHRID);
        }
 
        String SHRXM = entity.getSHRXM();
        if (SHRXM != null) {
            stmt.bindString(102, SHRXM);
        }
 
        java.util.Date SHRQ = entity.getSHRQ();
        if (SHRQ != null) {
            stmt.bindLong(103, SHRQ.getTime());
        }
 
        Integer SHBZ = entity.getSHBZ();
        if (SHBZ != null) {
            stmt.bindLong(104, SHBZ);
        }
 
        String BZ = entity.getBZ();
        if (BZ != null) {
            stmt.bindString(105, BZ);
        }
 
        Integer TZXZ = entity.getTZXZ();
        if (TZXZ != null) {
            stmt.bindLong(106, TZXZ);
        }
 
        Integer ZFBZ = entity.getZFBZ();
        if (ZFBZ != null) {
            stmt.bindLong(107, ZFBZ);
        }
 
        java.util.Date ZFSJ = entity.getZFSJ();
        if (ZFSJ != null) {
            stmt.bindLong(108, ZFSJ.getTime());
        }
 
        String ZFRID = entity.getZFRID();
        if (ZFRID != null) {
            stmt.bindString(109, ZFRID);
        }
 
        String ZFRXM = entity.getZFRXM();
        if (ZFRXM != null) {
            stmt.bindString(110, ZFRXM);
        }
 
        java.util.Date BXRQ = entity.getBXRQ();
        if (BXRQ != null) {
            stmt.bindLong(111, BXRQ.getTime());
        }
 
        String CCXLH = entity.getCCXLH();
        if (CCXLH != null) {
            stmt.bindString(112, CCXLH);
        }
 
        java.util.Date SCRQ = entity.getSCRQ();
        if (SCRQ != null) {
            stmt.bindLong(113, SCRQ.getTime());
        }
 
        String JLBZ = entity.getJLBZ();
        if (JLBZ != null) {
            stmt.bindString(114, JLBZ);
        }
 
        String RFID_CODE = entity.getRFID_CODE();
        if (RFID_CODE != null) {
            stmt.bindString(115, RFID_CODE);
        }
 
        Integer PRINT_COUNT = entity.getPRINT_COUNT();
        if (PRINT_COUNT != null) {
            stmt.bindLong(116, PRINT_COUNT);
        }
 
        String FACTORY_PHONE = entity.getFACTORY_PHONE();
        if (FACTORY_PHONE != null) {
            stmt.bindString(117, FACTORY_PHONE);
        }
 
        String KSKCID = entity.getKSKCID();
        if (KSKCID != null) {
            stmt.bindString(118, KSKCID);
        }
 
        String BAR_CODE = entity.getBAR_CODE();
        if (BAR_CODE != null) {
            stmt.bindString(119, BAR_CODE);
        }
 
        Integer XJBZ = entity.getXJBZ();
        if (XJBZ != null) {
            stmt.bindLong(120, XJBZ);
        }
 
        Integer QJBZ = entity.getQJBZ();
        if (QJBZ != null) {
            stmt.bindLong(121, QJBZ);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, IN_ASSET entity) {
        stmt.clearBindings();
 
        Long ID = entity.getID();
        if (ID != null) {
            stmt.bindLong(1, ID);
        }
 
        String ZZID = entity.getZZID();
        if (ZZID != null) {
            stmt.bindString(2, ZZID);
        }
 
        String KFID = entity.getKFID();
        if (KFID != null) {
            stmt.bindString(3, KFID);
        }
 
        String FLID = entity.getFLID();
        if (FLID != null) {
            stmt.bindString(4, FLID);
        }
 
        String ZBID = entity.getZBID();
        if (ZBID != null) {
            stmt.bindString(5, ZBID);
        }
 
        String ZBMC = entity.getZBMC();
        if (ZBMC != null) {
            stmt.bindString(6, ZBMC);
        }
 
        String HSID = entity.getHSID();
        if (HSID != null) {
            stmt.bindString(7, HSID);
        }
 
        String HSMC = entity.getHSMC();
        if (HSMC != null) {
            stmt.bindString(8, HSMC);
        }
 
        String KPBH = entity.getKPBH();
        if (KPBH != null) {
            stmt.bindString(9, KPBH);
        }
 
        String KPBH_OLD = entity.getKPBH_OLD();
        if (KPBH_OLD != null) {
            stmt.bindString(10, KPBH_OLD);
        }
 
        String UHF = entity.getUHF();
        if (UHF != null) {
            stmt.bindString(11, UHF);
        }
 
        String UHF1 = entity.getUHF1();
        if (UHF1 != null) {
            stmt.bindString(12, UHF1);
        }
 
        String UHF2 = entity.getUHF2();
        if (UHF2 != null) {
            stmt.bindString(13, UHF2);
        }
 
        String UFH3 = entity.getUFH3();
        if (UFH3 != null) {
            stmt.bindString(14, UFH3);
        }
 
        String MCGGID = entity.getMCGGID();
        if (MCGGID != null) {
            stmt.bindString(15, MCGGID);
        }
 
        String WZMC = entity.getWZMC();
        if (WZMC != null) {
            stmt.bindString(16, WZMC);
        }
 
        String GGXH = entity.getGGXH();
        if (GGXH != null) {
            stmt.bindString(17, GGXH);
        }
 
        String ZXDW = entity.getZXDW();
        if (ZXDW != null) {
            stmt.bindString(18, ZXDW);
        }
 
        String KCID = entity.getKCID();
        if (KCID != null) {
            stmt.bindString(19, KCID);
        }
 
        String KSID = entity.getKSID();
        if (KSID != null) {
            stmt.bindString(20, KSID);
        }
 
        String KSMC = entity.getKSMC();
        if (KSMC != null) {
            stmt.bindString(21, KSMC);
        }
 
        String BGKSID = entity.getBGKSID();
        if (BGKSID != null) {
            stmt.bindString(22, BGKSID);
        }
 
        String BGKSMC = entity.getBGKSMC();
        if (BGKSMC != null) {
            stmt.bindString(23, BGKSMC);
        }
 
        String BGRID = entity.getBGRID();
        if (BGRID != null) {
            stmt.bindString(24, BGRID);
        }
 
        String BGRXM = entity.getBGRXM();
        if (BGRXM != null) {
            stmt.bindString(25, BGRXM);
        }
 
        String JBRID = entity.getJBRID();
        if (JBRID != null) {
            stmt.bindString(26, JBRID);
        }
 
        String JBRXM = entity.getJBRXM();
        if (JBRXM != null) {
            stmt.bindString(27, JBRXM);
        }
 
        String CDID = entity.getCDID();
        if (CDID != null) {
            stmt.bindString(28, CDID);
        }
 
        String CDMC = entity.getCDMC();
        if (CDMC != null) {
            stmt.bindString(29, CDMC);
        }
 
        String PPID = entity.getPPID();
        if (PPID != null) {
            stmt.bindString(30, PPID);
        }
 
        String PPMC = entity.getPPMC();
        if (PPMC != null) {
            stmt.bindString(31, PPMC);
        }
 
        String GHDWID = entity.getGHDWID();
        if (GHDWID != null) {
            stmt.bindString(32, GHDWID);
        }
 
        String GHDWMC = entity.getGHDWMC();
        if (GHDWMC != null) {
            stmt.bindString(33, GHDWMC);
        }
 
        String SCCJID = entity.getSCCJID();
        if (SCCJID != null) {
            stmt.bindString(34, SCCJID);
        }
 
        String SCCJMC = entity.getSCCJMC();
        if (SCCJMC != null) {
            stmt.bindString(35, SCCJMC);
        }
 
        String GRTJ = entity.getGRTJ();
        if (GRTJ != null) {
            stmt.bindString(36, GRTJ);
        }
 
        java.util.Date GRRQ = entity.getGRRQ();
        if (GRRQ != null) {
            stmt.bindLong(37, GRRQ.getTime());
        }
 
        String ZT = entity.getZT();
        if (ZT != null) {
            stmt.bindString(38, ZT);
        }
 
        java.util.Date SYRQ = entity.getSYRQ();
        if (SYRQ != null) {
            stmt.bindLong(39, SYRQ.getTime());
        }
 
        java.util.Date JZRQ = entity.getJZRQ();
        if (JZRQ != null) {
            stmt.bindLong(40, JZRQ.getTime());
        }
 
        java.util.Date DHAZRQ = entity.getDHAZRQ();
        if (DHAZRQ != null) {
            stmt.bindLong(41, DHAZRQ.getTime());
        }
 
        String DDXX = entity.getDDXX();
        if (DDXX != null) {
            stmt.bindString(42, DDXX);
        }
 
        String DDID = entity.getDDID();
        if (DDID != null) {
            stmt.bindString(43, DDID);
        }
 
        String DDMC = entity.getDDMC();
        if (DDMC != null) {
            stmt.bindString(44, DDMC);
        }
 
        String DDJC = entity.getDDJC();
        if (DDJC != null) {
            stmt.bindString(45, DDJC);
        }
 
        Double ZJYS = entity.getZJYS();
        if (ZJYS != null) {
            stmt.bindDouble(46, ZJYS);
        }
 
        Double LJZJYS = entity.getLJZJYS();
        if (LJZJYS != null) {
            stmt.bindDouble(47, LJZJYS);
        }
 
        Double SYYS = entity.getSYYS();
        if (SYYS != null) {
            stmt.bindDouble(48, SYYS);
        }
 
        Double DJ = entity.getDJ();
        if (DJ != null) {
            stmt.bindDouble(49, DJ);
        }
 
        Double CZ_JE = entity.getCZ_JE();
        if (CZ_JE != null) {
            stmt.bindDouble(50, CZ_JE);
        }
 
        Double ZC_JE = entity.getZC_JE();
        if (ZC_JE != null) {
            stmt.bindDouble(51, ZC_JE);
        }
 
        Double KY_JE = entity.getKY_JE();
        if (KY_JE != null) {
            stmt.bindDouble(52, KY_JE);
        }
 
        Double CZ_LJZJJE = entity.getCZ_LJZJJE();
        if (CZ_LJZJJE != null) {
            stmt.bindDouble(53, CZ_LJZJJE);
        }
 
        Double ZC_LJZJJE = entity.getZC_LJZJJE();
        if (ZC_LJZJJE != null) {
            stmt.bindDouble(54, ZC_LJZJJE);
        }
 
        Double KY_LJZJJE = entity.getKY_LJZJJE();
        if (KY_LJZJJE != null) {
            stmt.bindDouble(55, KY_LJZJJE);
        }
 
        Double LJZJJE = entity.getLJZJJE();
        if (LJZJJE != null) {
            stmt.bindDouble(56, LJZJJE);
        }
 
        Double JCZ = entity.getJCZ();
        if (JCZ != null) {
            stmt.bindDouble(57, JCZ);
        }
 
        String KJQJ = entity.getKJQJ();
        if (KJQJ != null) {
            stmt.bindString(58, KJQJ);
        }
 
        String RKDMXID = entity.getRKDMXID();
        if (RKDMXID != null) {
            stmt.bindString(59, RKDMXID);
        }
 
        String RKD_DJHM = entity.getRKD_DJHM();
        if (RKD_DJHM != null) {
            stmt.bindString(60, RKD_DJHM);
        }
 
        java.util.Date RKRQ = entity.getRKRQ();
        if (RKRQ != null) {
            stmt.bindLong(61, RKRQ.getTime());
        }
 
        String RKDMXID2 = entity.getRKDMXID2();
        if (RKDMXID2 != null) {
            stmt.bindString(62, RKDMXID2);
        }
 
        String RKD_DJHM2 = entity.getRKD_DJHM2();
        if (RKD_DJHM2 != null) {
            stmt.bindString(63, RKD_DJHM2);
        }
 
        java.util.Date RKRQ2 = entity.getRKRQ2();
        if (RKRQ2 != null) {
            stmt.bindLong(64, RKRQ2.getTime());
        }
 
        String CKDMXID = entity.getCKDMXID();
        if (CKDMXID != null) {
            stmt.bindString(65, CKDMXID);
        }
 
        String CKD_DJHM = entity.getCKD_DJHM();
        if (CKD_DJHM != null) {
            stmt.bindString(66, CKD_DJHM);
        }
 
        java.util.Date CKRQ = entity.getCKRQ();
        if (CKRQ != null) {
            stmt.bindLong(67, CKRQ.getTime());
        }
 
        String CKDMXID2 = entity.getCKDMXID2();
        if (CKDMXID2 != null) {
            stmt.bindString(68, CKDMXID2);
        }
 
        String CKD_DJHM2 = entity.getCKD_DJHM2();
        if (CKD_DJHM2 != null) {
            stmt.bindString(69, CKD_DJHM2);
        }
 
        java.util.Date CKRQ2 = entity.getCKRQ2();
        if (CKRQ2 != null) {
            stmt.bindLong(70, CKRQ2.getTime());
        }
 
        java.util.Date DBSRQ = entity.getDBSRQ();
        if (DBSRQ != null) {
            stmt.bindLong(71, DBSRQ.getTime());
        }
 
        String BSDMXID = entity.getBSDMXID();
        if (BSDMXID != null) {
            stmt.bindString(72, BSDMXID);
        }
 
        String BSD_DJHM = entity.getBSD_DJHM();
        if (BSD_DJHM != null) {
            stmt.bindString(73, BSD_DJHM);
        }
 
        java.util.Date BSRQ = entity.getBSRQ();
        if (BSRQ != null) {
            stmt.bindLong(74, BSRQ.getTime());
        }
 
        String JFLBID = entity.getJFLBID();
        if (JFLBID != null) {
            stmt.bindString(75, JFLBID);
        }
 
        String JFLBMC = entity.getJFLBMC();
        if (JFLBMC != null) {
            stmt.bindString(76, JFLBMC);
        }
 
        String JFID = entity.getJFID();
        if (JFID != null) {
            stmt.bindString(77, JFID);
        }
 
        String JFMC = entity.getJFMC();
        if (JFMC != null) {
            stmt.bindString(78, JFMC);
        }
 
        String SCBH = entity.getSCBH();
        if (SCBH != null) {
            stmt.bindString(79, SCBH);
        }
 
        Integer PM_PLAN_FLAG = entity.getPM_PLAN_FLAG();
        if (PM_PLAN_FLAG != null) {
            stmt.bindLong(80, PM_PLAN_FLAG);
        }
 
        Integer PM_FLAG = entity.getPM_FLAG();
        if (PM_FLAG != null) {
            stmt.bindLong(81, PM_FLAG);
        }
 
        Integer WXBZ = entity.getWXBZ();
        if (WXBZ != null) {
            stmt.bindLong(82, WXBZ);
        }
 
        Double TD_TDMJ = entity.getTD_TDMJ();
        if (TD_TDMJ != null) {
            stmt.bindDouble(83, TD_TDMJ);
        }
 
        String TD_ZH = entity.getTD_ZH();
        if (TD_ZH != null) {
            stmt.bindString(84, TD_ZH);
        }
 
        java.util.Date TD_FZRQ = entity.getTD_FZRQ();
        if (TD_FZRQ != null) {
            stmt.bindLong(85, TD_FZRQ.getTime());
        }
 
        String TD_LY = entity.getTD_LY();
        if (TD_LY != null) {
            stmt.bindString(86, TD_LY);
        }
 
        String TD_CQXS = entity.getTD_CQXS();
        if (TD_CQXS != null) {
            stmt.bindString(87, TD_CQXS);
        }
 
        String TD_SYFX = entity.getTD_SYFX();
        if (TD_SYFX != null) {
            stmt.bindString(88, TD_SYFX);
        }
 
        String QC_CPH = entity.getQC_CPH();
        if (QC_CPH != null) {
            stmt.bindString(89, QC_CPH);
        }
 
        java.util.Date QC_FZRQ = entity.getQC_FZRQ();
        if (QC_FZRQ != null) {
            stmt.bindLong(90, QC_FZRQ.getTime());
        }
 
        String QC_ZH = entity.getQC_ZH();
        if (QC_ZH != null) {
            stmt.bindString(91, QC_ZH);
        }
 
        String QC_XH = entity.getQC_XH();
        if (QC_XH != null) {
            stmt.bindString(92, QC_XH);
        }
 
        Double QC_PQL = entity.getQC_PQL();
        if (QC_PQL != null) {
            stmt.bindDouble(93, QC_PQL);
        }
 
        String FW_JZJG = entity.getFW_JZJG();
        if (FW_JZJG != null) {
            stmt.bindString(94, FW_JZJG);
        }
 
        Double FW_JZMJ = entity.getFW_JZMJ();
        if (FW_JZMJ != null) {
            stmt.bindDouble(95, FW_JZMJ);
        }
 
        java.util.Date FW_JGRQ = entity.getFW_JGRQ();
        if (FW_JGRQ != null) {
            stmt.bindLong(96, FW_JGRQ.getTime());
        }
 
        java.util.Date FW_SYRQ = entity.getFW_SYRQ();
        if (FW_SYRQ != null) {
            stmt.bindLong(97, FW_SYRQ.getTime());
        }
 
        String LRRID = entity.getLRRID();
        if (LRRID != null) {
            stmt.bindString(98, LRRID);
        }
 
        String LRRXM = entity.getLRRXM();
        if (LRRXM != null) {
            stmt.bindString(99, LRRXM);
        }
 
        java.util.Date LRRQ = entity.getLRRQ();
        if (LRRQ != null) {
            stmt.bindLong(100, LRRQ.getTime());
        }
 
        String SHRID = entity.getSHRID();
        if (SHRID != null) {
            stmt.bindString(101, SHRID);
        }
 
        String SHRXM = entity.getSHRXM();
        if (SHRXM != null) {
            stmt.bindString(102, SHRXM);
        }
 
        java.util.Date SHRQ = entity.getSHRQ();
        if (SHRQ != null) {
            stmt.bindLong(103, SHRQ.getTime());
        }
 
        Integer SHBZ = entity.getSHBZ();
        if (SHBZ != null) {
            stmt.bindLong(104, SHBZ);
        }
 
        String BZ = entity.getBZ();
        if (BZ != null) {
            stmt.bindString(105, BZ);
        }
 
        Integer TZXZ = entity.getTZXZ();
        if (TZXZ != null) {
            stmt.bindLong(106, TZXZ);
        }
 
        Integer ZFBZ = entity.getZFBZ();
        if (ZFBZ != null) {
            stmt.bindLong(107, ZFBZ);
        }
 
        java.util.Date ZFSJ = entity.getZFSJ();
        if (ZFSJ != null) {
            stmt.bindLong(108, ZFSJ.getTime());
        }
 
        String ZFRID = entity.getZFRID();
        if (ZFRID != null) {
            stmt.bindString(109, ZFRID);
        }
 
        String ZFRXM = entity.getZFRXM();
        if (ZFRXM != null) {
            stmt.bindString(110, ZFRXM);
        }
 
        java.util.Date BXRQ = entity.getBXRQ();
        if (BXRQ != null) {
            stmt.bindLong(111, BXRQ.getTime());
        }
 
        String CCXLH = entity.getCCXLH();
        if (CCXLH != null) {
            stmt.bindString(112, CCXLH);
        }
 
        java.util.Date SCRQ = entity.getSCRQ();
        if (SCRQ != null) {
            stmt.bindLong(113, SCRQ.getTime());
        }
 
        String JLBZ = entity.getJLBZ();
        if (JLBZ != null) {
            stmt.bindString(114, JLBZ);
        }
 
        String RFID_CODE = entity.getRFID_CODE();
        if (RFID_CODE != null) {
            stmt.bindString(115, RFID_CODE);
        }
 
        Integer PRINT_COUNT = entity.getPRINT_COUNT();
        if (PRINT_COUNT != null) {
            stmt.bindLong(116, PRINT_COUNT);
        }
 
        String FACTORY_PHONE = entity.getFACTORY_PHONE();
        if (FACTORY_PHONE != null) {
            stmt.bindString(117, FACTORY_PHONE);
        }
 
        String KSKCID = entity.getKSKCID();
        if (KSKCID != null) {
            stmt.bindString(118, KSKCID);
        }
 
        String BAR_CODE = entity.getBAR_CODE();
        if (BAR_CODE != null) {
            stmt.bindString(119, BAR_CODE);
        }
 
        Integer XJBZ = entity.getXJBZ();
        if (XJBZ != null) {
            stmt.bindLong(120, XJBZ);
        }
 
        Integer QJBZ = entity.getQJBZ();
        if (QJBZ != null) {
            stmt.bindLong(121, QJBZ);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public IN_ASSET readEntity(Cursor cursor, int offset) {
        IN_ASSET entity = new IN_ASSET( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // ID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // ZZID
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // KFID
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // FLID
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // ZBID
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // ZBMC
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // HSID
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // HSMC
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // KPBH
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // KPBH_OLD
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // UHF
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // UHF1
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // UHF2
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // UFH3
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // MCGGID
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // WZMC
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // GGXH
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // ZXDW
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // KCID
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // KSID
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // KSMC
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // BGKSID
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // BGKSMC
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // BGRID
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // BGRXM
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // JBRID
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // JBRXM
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // CDID
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // CDMC
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // PPID
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // PPMC
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // GHDWID
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // GHDWMC
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // SCCJID
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // SCCJMC
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // GRTJ
            cursor.isNull(offset + 36) ? null : new java.util.Date(cursor.getLong(offset + 36)), // GRRQ
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // ZT
            cursor.isNull(offset + 38) ? null : new java.util.Date(cursor.getLong(offset + 38)), // SYRQ
            cursor.isNull(offset + 39) ? null : new java.util.Date(cursor.getLong(offset + 39)), // JZRQ
            cursor.isNull(offset + 40) ? null : new java.util.Date(cursor.getLong(offset + 40)), // DHAZRQ
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // DDXX
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // DDID
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // DDMC
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // DDJC
            cursor.isNull(offset + 45) ? null : cursor.getDouble(offset + 45), // ZJYS
            cursor.isNull(offset + 46) ? null : cursor.getDouble(offset + 46), // LJZJYS
            cursor.isNull(offset + 47) ? null : cursor.getDouble(offset + 47), // SYYS
            cursor.isNull(offset + 48) ? null : cursor.getDouble(offset + 48), // DJ
            cursor.isNull(offset + 49) ? null : cursor.getDouble(offset + 49), // CZ_JE
            cursor.isNull(offset + 50) ? null : cursor.getDouble(offset + 50), // ZC_JE
            cursor.isNull(offset + 51) ? null : cursor.getDouble(offset + 51), // KY_JE
            cursor.isNull(offset + 52) ? null : cursor.getDouble(offset + 52), // CZ_LJZJJE
            cursor.isNull(offset + 53) ? null : cursor.getDouble(offset + 53), // ZC_LJZJJE
            cursor.isNull(offset + 54) ? null : cursor.getDouble(offset + 54), // KY_LJZJJE
            cursor.isNull(offset + 55) ? null : cursor.getDouble(offset + 55), // LJZJJE
            cursor.isNull(offset + 56) ? null : cursor.getDouble(offset + 56), // JCZ
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // KJQJ
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // RKDMXID
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // RKD_DJHM
            cursor.isNull(offset + 60) ? null : new java.util.Date(cursor.getLong(offset + 60)), // RKRQ
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // RKDMXID2
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // RKD_DJHM2
            cursor.isNull(offset + 63) ? null : new java.util.Date(cursor.getLong(offset + 63)), // RKRQ2
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // CKDMXID
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // CKD_DJHM
            cursor.isNull(offset + 66) ? null : new java.util.Date(cursor.getLong(offset + 66)), // CKRQ
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // CKDMXID2
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // CKD_DJHM2
            cursor.isNull(offset + 69) ? null : new java.util.Date(cursor.getLong(offset + 69)), // CKRQ2
            cursor.isNull(offset + 70) ? null : new java.util.Date(cursor.getLong(offset + 70)), // DBSRQ
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // BSDMXID
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // BSD_DJHM
            cursor.isNull(offset + 73) ? null : new java.util.Date(cursor.getLong(offset + 73)), // BSRQ
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // JFLBID
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // JFLBMC
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // JFID
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // JFMC
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // SCBH
            cursor.isNull(offset + 79) ? null : cursor.getInt(offset + 79), // PM_PLAN_FLAG
            cursor.isNull(offset + 80) ? null : cursor.getInt(offset + 80), // PM_FLAG
            cursor.isNull(offset + 81) ? null : cursor.getInt(offset + 81), // WXBZ
            cursor.isNull(offset + 82) ? null : cursor.getDouble(offset + 82), // TD_TDMJ
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // TD_ZH
            cursor.isNull(offset + 84) ? null : new java.util.Date(cursor.getLong(offset + 84)), // TD_FZRQ
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // TD_LY
            cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86), // TD_CQXS
            cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87), // TD_SYFX
            cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88), // QC_CPH
            cursor.isNull(offset + 89) ? null : new java.util.Date(cursor.getLong(offset + 89)), // QC_FZRQ
            cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90), // QC_ZH
            cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91), // QC_XH
            cursor.isNull(offset + 92) ? null : cursor.getDouble(offset + 92), // QC_PQL
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93), // FW_JZJG
            cursor.isNull(offset + 94) ? null : cursor.getDouble(offset + 94), // FW_JZMJ
            cursor.isNull(offset + 95) ? null : new java.util.Date(cursor.getLong(offset + 95)), // FW_JGRQ
            cursor.isNull(offset + 96) ? null : new java.util.Date(cursor.getLong(offset + 96)), // FW_SYRQ
            cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97), // LRRID
            cursor.isNull(offset + 98) ? null : cursor.getString(offset + 98), // LRRXM
            cursor.isNull(offset + 99) ? null : new java.util.Date(cursor.getLong(offset + 99)), // LRRQ
            cursor.isNull(offset + 100) ? null : cursor.getString(offset + 100), // SHRID
            cursor.isNull(offset + 101) ? null : cursor.getString(offset + 101), // SHRXM
            cursor.isNull(offset + 102) ? null : new java.util.Date(cursor.getLong(offset + 102)), // SHRQ
            cursor.isNull(offset + 103) ? null : cursor.getInt(offset + 103), // SHBZ
            cursor.isNull(offset + 104) ? null : cursor.getString(offset + 104), // BZ
            cursor.isNull(offset + 105) ? null : cursor.getInt(offset + 105), // TZXZ
            cursor.isNull(offset + 106) ? null : cursor.getInt(offset + 106), // ZFBZ
            cursor.isNull(offset + 107) ? null : new java.util.Date(cursor.getLong(offset + 107)), // ZFSJ
            cursor.isNull(offset + 108) ? null : cursor.getString(offset + 108), // ZFRID
            cursor.isNull(offset + 109) ? null : cursor.getString(offset + 109), // ZFRXM
            cursor.isNull(offset + 110) ? null : new java.util.Date(cursor.getLong(offset + 110)), // BXRQ
            cursor.isNull(offset + 111) ? null : cursor.getString(offset + 111), // CCXLH
            cursor.isNull(offset + 112) ? null : new java.util.Date(cursor.getLong(offset + 112)), // SCRQ
            cursor.isNull(offset + 113) ? null : cursor.getString(offset + 113), // JLBZ
            cursor.isNull(offset + 114) ? null : cursor.getString(offset + 114), // RFID_CODE
            cursor.isNull(offset + 115) ? null : cursor.getInt(offset + 115), // PRINT_COUNT
            cursor.isNull(offset + 116) ? null : cursor.getString(offset + 116), // FACTORY_PHONE
            cursor.isNull(offset + 117) ? null : cursor.getString(offset + 117), // KSKCID
            cursor.isNull(offset + 118) ? null : cursor.getString(offset + 118), // BAR_CODE
            cursor.isNull(offset + 119) ? null : cursor.getInt(offset + 119), // XJBZ
            cursor.isNull(offset + 120) ? null : cursor.getInt(offset + 120) // QJBZ
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, IN_ASSET entity, int offset) {
        entity.setID(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setZZID(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setKFID(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setFLID(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setZBID(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setZBMC(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setHSID(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setHSMC(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setKPBH(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setKPBH_OLD(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setUHF(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setUHF1(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setUHF2(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setUFH3(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setMCGGID(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setWZMC(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setGGXH(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setZXDW(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setKCID(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setKSID(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setKSMC(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setBGKSID(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setBGKSMC(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setBGRID(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setBGRXM(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setJBRID(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setJBRXM(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setCDID(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setCDMC(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setPPID(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setPPMC(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setGHDWID(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setGHDWMC(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setSCCJID(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setSCCJMC(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setGRTJ(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setGRRQ(cursor.isNull(offset + 36) ? null : new java.util.Date(cursor.getLong(offset + 36)));
        entity.setZT(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setSYRQ(cursor.isNull(offset + 38) ? null : new java.util.Date(cursor.getLong(offset + 38)));
        entity.setJZRQ(cursor.isNull(offset + 39) ? null : new java.util.Date(cursor.getLong(offset + 39)));
        entity.setDHAZRQ(cursor.isNull(offset + 40) ? null : new java.util.Date(cursor.getLong(offset + 40)));
        entity.setDDXX(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setDDID(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setDDMC(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setDDJC(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setZJYS(cursor.isNull(offset + 45) ? null : cursor.getDouble(offset + 45));
        entity.setLJZJYS(cursor.isNull(offset + 46) ? null : cursor.getDouble(offset + 46));
        entity.setSYYS(cursor.isNull(offset + 47) ? null : cursor.getDouble(offset + 47));
        entity.setDJ(cursor.isNull(offset + 48) ? null : cursor.getDouble(offset + 48));
        entity.setCZ_JE(cursor.isNull(offset + 49) ? null : cursor.getDouble(offset + 49));
        entity.setZC_JE(cursor.isNull(offset + 50) ? null : cursor.getDouble(offset + 50));
        entity.setKY_JE(cursor.isNull(offset + 51) ? null : cursor.getDouble(offset + 51));
        entity.setCZ_LJZJJE(cursor.isNull(offset + 52) ? null : cursor.getDouble(offset + 52));
        entity.setZC_LJZJJE(cursor.isNull(offset + 53) ? null : cursor.getDouble(offset + 53));
        entity.setKY_LJZJJE(cursor.isNull(offset + 54) ? null : cursor.getDouble(offset + 54));
        entity.setLJZJJE(cursor.isNull(offset + 55) ? null : cursor.getDouble(offset + 55));
        entity.setJCZ(cursor.isNull(offset + 56) ? null : cursor.getDouble(offset + 56));
        entity.setKJQJ(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setRKDMXID(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setRKD_DJHM(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setRKRQ(cursor.isNull(offset + 60) ? null : new java.util.Date(cursor.getLong(offset + 60)));
        entity.setRKDMXID2(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setRKD_DJHM2(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setRKRQ2(cursor.isNull(offset + 63) ? null : new java.util.Date(cursor.getLong(offset + 63)));
        entity.setCKDMXID(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setCKD_DJHM(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setCKRQ(cursor.isNull(offset + 66) ? null : new java.util.Date(cursor.getLong(offset + 66)));
        entity.setCKDMXID2(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setCKD_DJHM2(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setCKRQ2(cursor.isNull(offset + 69) ? null : new java.util.Date(cursor.getLong(offset + 69)));
        entity.setDBSRQ(cursor.isNull(offset + 70) ? null : new java.util.Date(cursor.getLong(offset + 70)));
        entity.setBSDMXID(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setBSD_DJHM(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setBSRQ(cursor.isNull(offset + 73) ? null : new java.util.Date(cursor.getLong(offset + 73)));
        entity.setJFLBID(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setJFLBMC(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setJFID(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setJFMC(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setSCBH(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setPM_PLAN_FLAG(cursor.isNull(offset + 79) ? null : cursor.getInt(offset + 79));
        entity.setPM_FLAG(cursor.isNull(offset + 80) ? null : cursor.getInt(offset + 80));
        entity.setWXBZ(cursor.isNull(offset + 81) ? null : cursor.getInt(offset + 81));
        entity.setTD_TDMJ(cursor.isNull(offset + 82) ? null : cursor.getDouble(offset + 82));
        entity.setTD_ZH(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setTD_FZRQ(cursor.isNull(offset + 84) ? null : new java.util.Date(cursor.getLong(offset + 84)));
        entity.setTD_LY(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setTD_CQXS(cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86));
        entity.setTD_SYFX(cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87));
        entity.setQC_CPH(cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88));
        entity.setQC_FZRQ(cursor.isNull(offset + 89) ? null : new java.util.Date(cursor.getLong(offset + 89)));
        entity.setQC_ZH(cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90));
        entity.setQC_XH(cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91));
        entity.setQC_PQL(cursor.isNull(offset + 92) ? null : cursor.getDouble(offset + 92));
        entity.setFW_JZJG(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
        entity.setFW_JZMJ(cursor.isNull(offset + 94) ? null : cursor.getDouble(offset + 94));
        entity.setFW_JGRQ(cursor.isNull(offset + 95) ? null : new java.util.Date(cursor.getLong(offset + 95)));
        entity.setFW_SYRQ(cursor.isNull(offset + 96) ? null : new java.util.Date(cursor.getLong(offset + 96)));
        entity.setLRRID(cursor.isNull(offset + 97) ? null : cursor.getString(offset + 97));
        entity.setLRRXM(cursor.isNull(offset + 98) ? null : cursor.getString(offset + 98));
        entity.setLRRQ(cursor.isNull(offset + 99) ? null : new java.util.Date(cursor.getLong(offset + 99)));
        entity.setSHRID(cursor.isNull(offset + 100) ? null : cursor.getString(offset + 100));
        entity.setSHRXM(cursor.isNull(offset + 101) ? null : cursor.getString(offset + 101));
        entity.setSHRQ(cursor.isNull(offset + 102) ? null : new java.util.Date(cursor.getLong(offset + 102)));
        entity.setSHBZ(cursor.isNull(offset + 103) ? null : cursor.getInt(offset + 103));
        entity.setBZ(cursor.isNull(offset + 104) ? null : cursor.getString(offset + 104));
        entity.setTZXZ(cursor.isNull(offset + 105) ? null : cursor.getInt(offset + 105));
        entity.setZFBZ(cursor.isNull(offset + 106) ? null : cursor.getInt(offset + 106));
        entity.setZFSJ(cursor.isNull(offset + 107) ? null : new java.util.Date(cursor.getLong(offset + 107)));
        entity.setZFRID(cursor.isNull(offset + 108) ? null : cursor.getString(offset + 108));
        entity.setZFRXM(cursor.isNull(offset + 109) ? null : cursor.getString(offset + 109));
        entity.setBXRQ(cursor.isNull(offset + 110) ? null : new java.util.Date(cursor.getLong(offset + 110)));
        entity.setCCXLH(cursor.isNull(offset + 111) ? null : cursor.getString(offset + 111));
        entity.setSCRQ(cursor.isNull(offset + 112) ? null : new java.util.Date(cursor.getLong(offset + 112)));
        entity.setJLBZ(cursor.isNull(offset + 113) ? null : cursor.getString(offset + 113));
        entity.setRFID_CODE(cursor.isNull(offset + 114) ? null : cursor.getString(offset + 114));
        entity.setPRINT_COUNT(cursor.isNull(offset + 115) ? null : cursor.getInt(offset + 115));
        entity.setFACTORY_PHONE(cursor.isNull(offset + 116) ? null : cursor.getString(offset + 116));
        entity.setKSKCID(cursor.isNull(offset + 117) ? null : cursor.getString(offset + 117));
        entity.setBAR_CODE(cursor.isNull(offset + 118) ? null : cursor.getString(offset + 118));
        entity.setXJBZ(cursor.isNull(offset + 119) ? null : cursor.getInt(offset + 119));
        entity.setQJBZ(cursor.isNull(offset + 120) ? null : cursor.getInt(offset + 120));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(IN_ASSET entity, long rowId) {
        entity.setID(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(IN_ASSET entity) {
        if(entity != null) {
            return entity.getID();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(IN_ASSET entity) {
        return entity.getID() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
