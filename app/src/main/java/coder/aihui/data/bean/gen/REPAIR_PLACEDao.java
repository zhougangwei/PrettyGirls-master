package coder.aihui.data.bean.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import coder.aihui.data.bean.REPAIR_PLACE;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "REPAIR__PLACE".
*/
public class REPAIR_PLACEDao extends AbstractDao<REPAIR_PLACE, Long> {

    public static final String TABLENAME = "REPAIR__PLACE";

    /**
     * Properties of entity REPAIR_PLACE.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property PLACE_ID = new Property(0, Long.class, "PLACE_ID", true, "PLACE__ID");
        public final static Property PLACE_KPBH = new Property(1, String.class, "PLACE_KPBH", false, "PLACE__KPBH");
        public final static Property PLACE_NAME = new Property(2, String.class, "PLACE_NAME", false, "PLACE__NAME");
        public final static Property PLACE_FULL_NAME = new Property(3, String.class, "PLACE_FULL_NAME", false, "PLACE__FULL__NAME");
        public final static Property PLACE_DDID = new Property(4, String.class, "PLACE_DDID", false, "PLACE__DDID");
        public final static Property PLACE_GZFLID = new Property(5, Integer.class, "PLACE_GZFLID", false, "PLACE__GZFLID");
        public final static Property PLACE_ISDEL = new Property(6, Integer.class, "PLACE_ISDEL", false, "PLACE__ISDEL");
        public final static Property PLACE_IS_PM = new Property(7, Integer.class, "PLACE_IS_PM", false, "PLACE__IS__PM");
        public final static Property PLACE_IS_QJ = new Property(8, Integer.class, "PLACE_IS_QJ", false, "PLACE__IS__QJ");
        public final static Property PLACE_IS_XJ = new Property(9, Integer.class, "PLACE_IS_XJ", false, "PLACE__IS__XJ");
        public final static Property PLACE_IS_WX = new Property(10, Integer.class, "PLACE_IS_WX", false, "PLACE__IS__WX");
        public final static Property PLACE_PY = new Property(11, String.class, "PLACE_PY", false, "PLACE__PY");
        public final static Property PLACE_WB = new Property(12, String.class, "PLACE_WB", false, "PLACE__WB");
        public final static Property PLACE_RFID_CODE = new Property(13, String.class, "PLACE_RFID_CODE", false, "PLACE__RFID__CODE");
        public final static Property PLACE_REMARK = new Property(14, String.class, "PLACE_REMARK", false, "PLACE__REMARK");
        public final static Property PLACE_CREATE_DATE = new Property(15, java.util.Date.class, "PLACE_CREATE_DATE", false, "PLACE__CREATE__DATE");
        public final static Property PLACE_UPDATE_DATE = new Property(16, java.util.Date.class, "PLACE_UPDATE_DATE", false, "PLACE__UPDATE__DATE");
        public final static Property PLACE_CREATE_USER = new Property(17, Integer.class, "PLACE_CREATE_USER", false, "PLACE__CREATE__USER");
        public final static Property PLACE_UPDATE_USER = new Property(18, Integer.class, "PLACE_UPDATE_USER", false, "PLACE__UPDATE__USER");
        public final static Property PLACE_XJID = new Property(19, String.class, "PLACE_XJID", false, "PLACE__XJID");
        public final static Property PLACE_PMID = new Property(20, String.class, "PLACE_PMID", false, "PLACE__PMID");
        public final static Property PLACE_NID = new Property(21, String.class, "PLACE_NID", false, "PLACE__NID");
        public final static Property ITEM_DD_NAME = new Property(22, String.class, "ITEM_DD_NAME", false, "ITEM__DD__NAME");
        public final static Property ITEM_XJ_NAME = new Property(23, String.class, "ITEM_XJ_NAME", false, "ITEM__XJ__NAME");
        public final static Property PLACE_BAR_CODE = new Property(24, String.class, "PLACE_BAR_CODE", false, "PLACE__BAR__CODE");
    }


    public REPAIR_PLACEDao(DaoConfig config) {
        super(config);
    }
    
    public REPAIR_PLACEDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"REPAIR__PLACE\" (" + //
                "\"PLACE__ID\" INTEGER PRIMARY KEY ," + // 0: PLACE_ID
                "\"PLACE__KPBH\" TEXT," + // 1: PLACE_KPBH
                "\"PLACE__NAME\" TEXT," + // 2: PLACE_NAME
                "\"PLACE__FULL__NAME\" TEXT," + // 3: PLACE_FULL_NAME
                "\"PLACE__DDID\" TEXT," + // 4: PLACE_DDID
                "\"PLACE__GZFLID\" INTEGER," + // 5: PLACE_GZFLID
                "\"PLACE__ISDEL\" INTEGER," + // 6: PLACE_ISDEL
                "\"PLACE__IS__PM\" INTEGER," + // 7: PLACE_IS_PM
                "\"PLACE__IS__QJ\" INTEGER," + // 8: PLACE_IS_QJ
                "\"PLACE__IS__XJ\" INTEGER," + // 9: PLACE_IS_XJ
                "\"PLACE__IS__WX\" INTEGER," + // 10: PLACE_IS_WX
                "\"PLACE__PY\" TEXT," + // 11: PLACE_PY
                "\"PLACE__WB\" TEXT," + // 12: PLACE_WB
                "\"PLACE__RFID__CODE\" TEXT," + // 13: PLACE_RFID_CODE
                "\"PLACE__REMARK\" TEXT," + // 14: PLACE_REMARK
                "\"PLACE__CREATE__DATE\" INTEGER," + // 15: PLACE_CREATE_DATE
                "\"PLACE__UPDATE__DATE\" INTEGER," + // 16: PLACE_UPDATE_DATE
                "\"PLACE__CREATE__USER\" INTEGER," + // 17: PLACE_CREATE_USER
                "\"PLACE__UPDATE__USER\" INTEGER," + // 18: PLACE_UPDATE_USER
                "\"PLACE__XJID\" TEXT," + // 19: PLACE_XJID
                "\"PLACE__PMID\" TEXT," + // 20: PLACE_PMID
                "\"PLACE__NID\" TEXT," + // 21: PLACE_NID
                "\"ITEM__DD__NAME\" TEXT," + // 22: ITEM_DD_NAME
                "\"ITEM__XJ__NAME\" TEXT," + // 23: ITEM_XJ_NAME
                "\"PLACE__BAR__CODE\" TEXT);"); // 24: PLACE_BAR_CODE
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"REPAIR__PLACE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, REPAIR_PLACE entity) {
        stmt.clearBindings();
 
        Long PLACE_ID = entity.getPLACE_ID();
        if (PLACE_ID != null) {
            stmt.bindLong(1, PLACE_ID);
        }
 
        String PLACE_KPBH = entity.getPLACE_KPBH();
        if (PLACE_KPBH != null) {
            stmt.bindString(2, PLACE_KPBH);
        }
 
        String PLACE_NAME = entity.getPLACE_NAME();
        if (PLACE_NAME != null) {
            stmt.bindString(3, PLACE_NAME);
        }
 
        String PLACE_FULL_NAME = entity.getPLACE_FULL_NAME();
        if (PLACE_FULL_NAME != null) {
            stmt.bindString(4, PLACE_FULL_NAME);
        }
 
        String PLACE_DDID = entity.getPLACE_DDID();
        if (PLACE_DDID != null) {
            stmt.bindString(5, PLACE_DDID);
        }
 
        Integer PLACE_GZFLID = entity.getPLACE_GZFLID();
        if (PLACE_GZFLID != null) {
            stmt.bindLong(6, PLACE_GZFLID);
        }
 
        Integer PLACE_ISDEL = entity.getPLACE_ISDEL();
        if (PLACE_ISDEL != null) {
            stmt.bindLong(7, PLACE_ISDEL);
        }
 
        Integer PLACE_IS_PM = entity.getPLACE_IS_PM();
        if (PLACE_IS_PM != null) {
            stmt.bindLong(8, PLACE_IS_PM);
        }
 
        Integer PLACE_IS_QJ = entity.getPLACE_IS_QJ();
        if (PLACE_IS_QJ != null) {
            stmt.bindLong(9, PLACE_IS_QJ);
        }
 
        Integer PLACE_IS_XJ = entity.getPLACE_IS_XJ();
        if (PLACE_IS_XJ != null) {
            stmt.bindLong(10, PLACE_IS_XJ);
        }
 
        Integer PLACE_IS_WX = entity.getPLACE_IS_WX();
        if (PLACE_IS_WX != null) {
            stmt.bindLong(11, PLACE_IS_WX);
        }
 
        String PLACE_PY = entity.getPLACE_PY();
        if (PLACE_PY != null) {
            stmt.bindString(12, PLACE_PY);
        }
 
        String PLACE_WB = entity.getPLACE_WB();
        if (PLACE_WB != null) {
            stmt.bindString(13, PLACE_WB);
        }
 
        String PLACE_RFID_CODE = entity.getPLACE_RFID_CODE();
        if (PLACE_RFID_CODE != null) {
            stmt.bindString(14, PLACE_RFID_CODE);
        }
 
        String PLACE_REMARK = entity.getPLACE_REMARK();
        if (PLACE_REMARK != null) {
            stmt.bindString(15, PLACE_REMARK);
        }
 
        java.util.Date PLACE_CREATE_DATE = entity.getPLACE_CREATE_DATE();
        if (PLACE_CREATE_DATE != null) {
            stmt.bindLong(16, PLACE_CREATE_DATE.getTime());
        }
 
        java.util.Date PLACE_UPDATE_DATE = entity.getPLACE_UPDATE_DATE();
        if (PLACE_UPDATE_DATE != null) {
            stmt.bindLong(17, PLACE_UPDATE_DATE.getTime());
        }
 
        Integer PLACE_CREATE_USER = entity.getPLACE_CREATE_USER();
        if (PLACE_CREATE_USER != null) {
            stmt.bindLong(18, PLACE_CREATE_USER);
        }
 
        Integer PLACE_UPDATE_USER = entity.getPLACE_UPDATE_USER();
        if (PLACE_UPDATE_USER != null) {
            stmt.bindLong(19, PLACE_UPDATE_USER);
        }
 
        String PLACE_XJID = entity.getPLACE_XJID();
        if (PLACE_XJID != null) {
            stmt.bindString(20, PLACE_XJID);
        }
 
        String PLACE_PMID = entity.getPLACE_PMID();
        if (PLACE_PMID != null) {
            stmt.bindString(21, PLACE_PMID);
        }
 
        String PLACE_NID = entity.getPLACE_NID();
        if (PLACE_NID != null) {
            stmt.bindString(22, PLACE_NID);
        }
 
        String ITEM_DD_NAME = entity.getITEM_DD_NAME();
        if (ITEM_DD_NAME != null) {
            stmt.bindString(23, ITEM_DD_NAME);
        }
 
        String ITEM_XJ_NAME = entity.getITEM_XJ_NAME();
        if (ITEM_XJ_NAME != null) {
            stmt.bindString(24, ITEM_XJ_NAME);
        }
 
        String PLACE_BAR_CODE = entity.getPLACE_BAR_CODE();
        if (PLACE_BAR_CODE != null) {
            stmt.bindString(25, PLACE_BAR_CODE);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, REPAIR_PLACE entity) {
        stmt.clearBindings();
 
        Long PLACE_ID = entity.getPLACE_ID();
        if (PLACE_ID != null) {
            stmt.bindLong(1, PLACE_ID);
        }
 
        String PLACE_KPBH = entity.getPLACE_KPBH();
        if (PLACE_KPBH != null) {
            stmt.bindString(2, PLACE_KPBH);
        }
 
        String PLACE_NAME = entity.getPLACE_NAME();
        if (PLACE_NAME != null) {
            stmt.bindString(3, PLACE_NAME);
        }
 
        String PLACE_FULL_NAME = entity.getPLACE_FULL_NAME();
        if (PLACE_FULL_NAME != null) {
            stmt.bindString(4, PLACE_FULL_NAME);
        }
 
        String PLACE_DDID = entity.getPLACE_DDID();
        if (PLACE_DDID != null) {
            stmt.bindString(5, PLACE_DDID);
        }
 
        Integer PLACE_GZFLID = entity.getPLACE_GZFLID();
        if (PLACE_GZFLID != null) {
            stmt.bindLong(6, PLACE_GZFLID);
        }
 
        Integer PLACE_ISDEL = entity.getPLACE_ISDEL();
        if (PLACE_ISDEL != null) {
            stmt.bindLong(7, PLACE_ISDEL);
        }
 
        Integer PLACE_IS_PM = entity.getPLACE_IS_PM();
        if (PLACE_IS_PM != null) {
            stmt.bindLong(8, PLACE_IS_PM);
        }
 
        Integer PLACE_IS_QJ = entity.getPLACE_IS_QJ();
        if (PLACE_IS_QJ != null) {
            stmt.bindLong(9, PLACE_IS_QJ);
        }
 
        Integer PLACE_IS_XJ = entity.getPLACE_IS_XJ();
        if (PLACE_IS_XJ != null) {
            stmt.bindLong(10, PLACE_IS_XJ);
        }
 
        Integer PLACE_IS_WX = entity.getPLACE_IS_WX();
        if (PLACE_IS_WX != null) {
            stmt.bindLong(11, PLACE_IS_WX);
        }
 
        String PLACE_PY = entity.getPLACE_PY();
        if (PLACE_PY != null) {
            stmt.bindString(12, PLACE_PY);
        }
 
        String PLACE_WB = entity.getPLACE_WB();
        if (PLACE_WB != null) {
            stmt.bindString(13, PLACE_WB);
        }
 
        String PLACE_RFID_CODE = entity.getPLACE_RFID_CODE();
        if (PLACE_RFID_CODE != null) {
            stmt.bindString(14, PLACE_RFID_CODE);
        }
 
        String PLACE_REMARK = entity.getPLACE_REMARK();
        if (PLACE_REMARK != null) {
            stmt.bindString(15, PLACE_REMARK);
        }
 
        java.util.Date PLACE_CREATE_DATE = entity.getPLACE_CREATE_DATE();
        if (PLACE_CREATE_DATE != null) {
            stmt.bindLong(16, PLACE_CREATE_DATE.getTime());
        }
 
        java.util.Date PLACE_UPDATE_DATE = entity.getPLACE_UPDATE_DATE();
        if (PLACE_UPDATE_DATE != null) {
            stmt.bindLong(17, PLACE_UPDATE_DATE.getTime());
        }
 
        Integer PLACE_CREATE_USER = entity.getPLACE_CREATE_USER();
        if (PLACE_CREATE_USER != null) {
            stmt.bindLong(18, PLACE_CREATE_USER);
        }
 
        Integer PLACE_UPDATE_USER = entity.getPLACE_UPDATE_USER();
        if (PLACE_UPDATE_USER != null) {
            stmt.bindLong(19, PLACE_UPDATE_USER);
        }
 
        String PLACE_XJID = entity.getPLACE_XJID();
        if (PLACE_XJID != null) {
            stmt.bindString(20, PLACE_XJID);
        }
 
        String PLACE_PMID = entity.getPLACE_PMID();
        if (PLACE_PMID != null) {
            stmt.bindString(21, PLACE_PMID);
        }
 
        String PLACE_NID = entity.getPLACE_NID();
        if (PLACE_NID != null) {
            stmt.bindString(22, PLACE_NID);
        }
 
        String ITEM_DD_NAME = entity.getITEM_DD_NAME();
        if (ITEM_DD_NAME != null) {
            stmt.bindString(23, ITEM_DD_NAME);
        }
 
        String ITEM_XJ_NAME = entity.getITEM_XJ_NAME();
        if (ITEM_XJ_NAME != null) {
            stmt.bindString(24, ITEM_XJ_NAME);
        }
 
        String PLACE_BAR_CODE = entity.getPLACE_BAR_CODE();
        if (PLACE_BAR_CODE != null) {
            stmt.bindString(25, PLACE_BAR_CODE);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public REPAIR_PLACE readEntity(Cursor cursor, int offset) {
        REPAIR_PLACE entity = new REPAIR_PLACE( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // PLACE_ID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // PLACE_KPBH
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // PLACE_NAME
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // PLACE_FULL_NAME
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // PLACE_DDID
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // PLACE_GZFLID
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // PLACE_ISDEL
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // PLACE_IS_PM
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // PLACE_IS_QJ
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // PLACE_IS_XJ
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // PLACE_IS_WX
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // PLACE_PY
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // PLACE_WB
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // PLACE_RFID_CODE
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // PLACE_REMARK
            cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)), // PLACE_CREATE_DATE
            cursor.isNull(offset + 16) ? null : new java.util.Date(cursor.getLong(offset + 16)), // PLACE_UPDATE_DATE
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // PLACE_CREATE_USER
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // PLACE_UPDATE_USER
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // PLACE_XJID
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // PLACE_PMID
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // PLACE_NID
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // ITEM_DD_NAME
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // ITEM_XJ_NAME
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24) // PLACE_BAR_CODE
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, REPAIR_PLACE entity, int offset) {
        entity.setPLACE_ID(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setPLACE_KPBH(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPLACE_NAME(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPLACE_FULL_NAME(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPLACE_DDID(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPLACE_GZFLID(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setPLACE_ISDEL(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setPLACE_IS_PM(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setPLACE_IS_QJ(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setPLACE_IS_XJ(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setPLACE_IS_WX(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setPLACE_PY(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setPLACE_WB(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setPLACE_RFID_CODE(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setPLACE_REMARK(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setPLACE_CREATE_DATE(cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)));
        entity.setPLACE_UPDATE_DATE(cursor.isNull(offset + 16) ? null : new java.util.Date(cursor.getLong(offset + 16)));
        entity.setPLACE_CREATE_USER(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setPLACE_UPDATE_USER(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setPLACE_XJID(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPLACE_PMID(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setPLACE_NID(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setITEM_DD_NAME(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setITEM_XJ_NAME(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setPLACE_BAR_CODE(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(REPAIR_PLACE entity, long rowId) {
        entity.setPLACE_ID(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(REPAIR_PLACE entity) {
        if(entity != null) {
            return entity.getPLACE_ID();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(REPAIR_PLACE entity) {
        return entity.getPLACE_ID() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
