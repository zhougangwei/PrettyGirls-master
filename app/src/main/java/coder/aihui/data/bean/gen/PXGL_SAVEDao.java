package coder.aihui.data.bean.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import coder.aihui.data.bean.PXGL_SAVE;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "PXGL__SAVE".
*/
public class PXGL_SAVEDao extends AbstractDao<PXGL_SAVE, Long> {

    public static final String TABLENAME = "PXGL__SAVE";

    /**
     * Properties of entity PXGL_SAVE.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property ID = new Property(0, Long.class, "ID", true, "_id");
        public final static Property PXJL_ID = new Property(1, Long.class, "PXJL_ID", false, "PXJL__ID");
        public final static Property PXJL_JSON = new Property(2, String.class, "PXJL_JSON", false, "PXJL__JSON");
        public final static Property PXFJ_JSON = new Property(3, String.class, "PXFJ_JSON", false, "PXFJ__JSON");
        public final static Property PXRY_JSON = new Property(4, String.class, "PXRY_JSON", false, "PXRY__JSON");
        public final static Property PXSB_JSON = new Property(5, String.class, "PXSB_JSON", false, "PXSB__JSON");
        public final static Property ITEM_STRING1 = new Property(6, String.class, "ITEM_STRING1", false, "ITEM__STRING1");
        public final static Property ITEM_STRING2 = new Property(7, String.class, "ITEM_STRING2", false, "ITEM__STRING2");
        public final static Property ITEM_STRING3 = new Property(8, String.class, "ITEM_STRING3", false, "ITEM__STRING3");
        public final static Property ITEM_STRG4 = new Property(9, String.class, "ITEM_STRG4", false, "ITEM__STRG4");
        public final static Property IS_UP = new Property(10, Integer.class, "IS_UP", false, "IS__UP");
    }


    public PXGL_SAVEDao(DaoConfig config) {
        super(config);
    }
    
    public PXGL_SAVEDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"PXGL__SAVE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: ID
                "\"PXJL__ID\" INTEGER," + // 1: PXJL_ID
                "\"PXJL__JSON\" TEXT," + // 2: PXJL_JSON
                "\"PXFJ__JSON\" TEXT," + // 3: PXFJ_JSON
                "\"PXRY__JSON\" TEXT," + // 4: PXRY_JSON
                "\"PXSB__JSON\" TEXT," + // 5: PXSB_JSON
                "\"ITEM__STRING1\" TEXT," + // 6: ITEM_STRING1
                "\"ITEM__STRING2\" TEXT," + // 7: ITEM_STRING2
                "\"ITEM__STRING3\" TEXT," + // 8: ITEM_STRING3
                "\"ITEM__STRG4\" TEXT," + // 9: ITEM_STRG4
                "\"IS__UP\" INTEGER);"); // 10: IS_UP
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"PXGL__SAVE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, PXGL_SAVE entity) {
        stmt.clearBindings();
 
        Long ID = entity.getID();
        if (ID != null) {
            stmt.bindLong(1, ID);
        }
 
        Long PXJL_ID = entity.getPXJL_ID();
        if (PXJL_ID != null) {
            stmt.bindLong(2, PXJL_ID);
        }
 
        String PXJL_JSON = entity.getPXJL_JSON();
        if (PXJL_JSON != null) {
            stmt.bindString(3, PXJL_JSON);
        }
 
        String PXFJ_JSON = entity.getPXFJ_JSON();
        if (PXFJ_JSON != null) {
            stmt.bindString(4, PXFJ_JSON);
        }
 
        String PXRY_JSON = entity.getPXRY_JSON();
        if (PXRY_JSON != null) {
            stmt.bindString(5, PXRY_JSON);
        }
 
        String PXSB_JSON = entity.getPXSB_JSON();
        if (PXSB_JSON != null) {
            stmt.bindString(6, PXSB_JSON);
        }
 
        String ITEM_STRING1 = entity.getITEM_STRING1();
        if (ITEM_STRING1 != null) {
            stmt.bindString(7, ITEM_STRING1);
        }
 
        String ITEM_STRING2 = entity.getITEM_STRING2();
        if (ITEM_STRING2 != null) {
            stmt.bindString(8, ITEM_STRING2);
        }
 
        String ITEM_STRING3 = entity.getITEM_STRING3();
        if (ITEM_STRING3 != null) {
            stmt.bindString(9, ITEM_STRING3);
        }
 
        String ITEM_STRG4 = entity.getITEM_STRG4();
        if (ITEM_STRG4 != null) {
            stmt.bindString(10, ITEM_STRG4);
        }
 
        Integer IS_UP = entity.getIS_UP();
        if (IS_UP != null) {
            stmt.bindLong(11, IS_UP);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, PXGL_SAVE entity) {
        stmt.clearBindings();
 
        Long ID = entity.getID();
        if (ID != null) {
            stmt.bindLong(1, ID);
        }
 
        Long PXJL_ID = entity.getPXJL_ID();
        if (PXJL_ID != null) {
            stmt.bindLong(2, PXJL_ID);
        }
 
        String PXJL_JSON = entity.getPXJL_JSON();
        if (PXJL_JSON != null) {
            stmt.bindString(3, PXJL_JSON);
        }
 
        String PXFJ_JSON = entity.getPXFJ_JSON();
        if (PXFJ_JSON != null) {
            stmt.bindString(4, PXFJ_JSON);
        }
 
        String PXRY_JSON = entity.getPXRY_JSON();
        if (PXRY_JSON != null) {
            stmt.bindString(5, PXRY_JSON);
        }
 
        String PXSB_JSON = entity.getPXSB_JSON();
        if (PXSB_JSON != null) {
            stmt.bindString(6, PXSB_JSON);
        }
 
        String ITEM_STRING1 = entity.getITEM_STRING1();
        if (ITEM_STRING1 != null) {
            stmt.bindString(7, ITEM_STRING1);
        }
 
        String ITEM_STRING2 = entity.getITEM_STRING2();
        if (ITEM_STRING2 != null) {
            stmt.bindString(8, ITEM_STRING2);
        }
 
        String ITEM_STRING3 = entity.getITEM_STRING3();
        if (ITEM_STRING3 != null) {
            stmt.bindString(9, ITEM_STRING3);
        }
 
        String ITEM_STRG4 = entity.getITEM_STRG4();
        if (ITEM_STRG4 != null) {
            stmt.bindString(10, ITEM_STRG4);
        }
 
        Integer IS_UP = entity.getIS_UP();
        if (IS_UP != null) {
            stmt.bindLong(11, IS_UP);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public PXGL_SAVE readEntity(Cursor cursor, int offset) {
        PXGL_SAVE entity = new PXGL_SAVE( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // ID
            cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // PXJL_ID
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // PXJL_JSON
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // PXFJ_JSON
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // PXRY_JSON
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // PXSB_JSON
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // ITEM_STRING1
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // ITEM_STRING2
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // ITEM_STRING3
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // ITEM_STRG4
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10) // IS_UP
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, PXGL_SAVE entity, int offset) {
        entity.setID(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setPXJL_ID(cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1));
        entity.setPXJL_JSON(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPXFJ_JSON(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPXRY_JSON(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPXSB_JSON(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setITEM_STRING1(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setITEM_STRING2(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setITEM_STRING3(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setITEM_STRG4(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setIS_UP(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(PXGL_SAVE entity, long rowId) {
        entity.setID(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(PXGL_SAVE entity) {
        if(entity != null) {
            return entity.getID();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(PXGL_SAVE entity) {
        return entity.getID() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
